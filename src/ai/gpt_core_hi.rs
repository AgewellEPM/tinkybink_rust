#![allow(clippy::needless_range_loop)]
#![allow(clippy::uninlined_format_args)]
//! рд╣рд┐рдВрджреА GPT рдХреЛрд░ - TinkyBink рдХреЗ рд▓рд┐рдП рдЙрдиреНрдирдд рд╣рд┐рдВрджреА рднрд╛рд╖рд╛ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг
//! Hindi GPT Core - Advanced Hindi language processing for TinkyBink

use anyhow::Result;
use serde::{Deserialize, Serialize};
use std::collections::HashMap;

/// рднрд╛рд╡рдирд╛рддреНрдордХ рд╕реНрдерд┐рддрд┐ - AI рдХреА рднрд╛рд╡рдирд╛рддреНрдордХ рдЕрд╡рд╕реНрдерд╛
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐ {
    /// рдЦреБрд╢реА (0.0 рд╕реЗ 1.0)
    pub рдЦреБрд╢реА: f32,
    /// рдЙрддреНрд╕рд╛рд╣ (0.0 рд╕реЗ 1.0)
    pub рдЙрддреНрд╕рд╛рд╣: f32,
    /// рд╢рд╛рдВрддрд┐ (0.0 рд╕реЗ 1.0)
    pub рд╢рд╛рдВрддрд┐: f32,
    /// рдХрд░реБрдгрд╛ (0.0 рд╕реЗ 1.0)
    pub рдХрд░реБрдгрд╛: f32,
    /// рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ (0.0 рд╕реЗ 1.0)
    pub рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛: f32,
    /// рднрдХреНрддрд┐ (0.0 рд╕реЗ 1.0)
    pub рднрдХреНрддрд┐: f32,
}

impl Default for рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐ {
    fn default() -> Self {
        Self {
            рдЦреБрд╢реА: 0.7, рдЙрддреНрд╕рд╛рд╣: 0.6, рд╢рд╛рдВрддрд┐: 0.8, рдХрд░реБрдгрд╛: 0.9, рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛: 0.7, рднрдХреНрддрд┐: 0.5
        }
    }
}

/// GPT рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди - рдореЙрдбрд▓ рд╕реЗрдЯрд┐рдВрдЧреНрд╕
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct рдЬреАрдкреАрдЯреА_рдХреЙрдиреНрдлрд╝рд┐рдЧ {
    /// рддрд╛рдкрдорд╛рди (рд░рдЪрдирд╛рддреНрдордХрддрд╛)
    pub рддрд╛рдкрдорд╛рди: f32,
    /// рдЕрдзрд┐рдХрддрдо рдЯреЛрдХрди
    pub рдЕрдзрд┐рдХрддрдо_рдЯреЛрдХрди: usize,
    /// рдЯреЙрдк-рдкреА (рдиреНрдпреВрдХреНрд▓рд┐рдпрд╕ рд╕реИрдВрдкрд▓рд┐рдВрдЧ)
    pub рдЯреЙрдк_рдкреА: f32,
    /// рджреЛрд╣рд░рд╛рд╡ рджрдВрдб
    pub рджреЛрд╣рд░рд╛рд╡_рджрдВрдб: f32,
    /// рднрд╛рд╖рд╛ рд╢реИрд▓реА
    pub рднрд╛рд╖рд╛_рд╢реИрд▓реА: рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░,
}

/// рднрд╛рд╖рд╛ рд╢реИрд▓реА рдХреЗ рдкреНрд░рдХрд╛рд░
#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░ {
    /// рдФрдкрдЪрд╛рд░рд┐рдХ рд╣рд┐рдВрджреА
    рдФрдкрдЪрд╛рд░рд┐рдХ,
    /// рдЕрдиреМрдкрдЪрд╛рд░рд┐рдХ/рдорд┐рддреНрд░рд╡рдд
    рдорд┐рддреНрд░рд╡рдд,
    /// рдХрд╛рд╡реНрдпрд╛рддреНрдордХ
    рдХрд╛рд╡реНрдпрд╛рддреНрдордХ,
    /// рддрдХрдиреАрдХреА
    рддрдХрдиреАрдХреА,
    /// рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ
    рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ,
}

impl Default for рдЬреАрдкреАрдЯреА_рдХреЙрдиреНрдлрд╝рд┐рдЧ {
    fn default() -> Self {
        Self {
            рддрд╛рдкрдорд╛рди: 0.8, рдЕрдзрд┐рдХрддрдо_рдЯреЛрдХрди: 2048, рдЯреЙрдк_рдкреА: 0.95, рджреЛрд╣рд░рд╛рд╡_рджрдВрдб: 1.1, рднрд╛рд╖рд╛_рд╢реИрд▓реА: рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдорд┐рддреНрд░рд╡рдд
        }
    }
}

/// рд╣рд┐рдВрджреА GPT рдХреЛрд░ - рдореБрдЦреНрдп рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рдЗрдВрдЬрди
pub struct рд╣рд┐рдВрджреА_рдЬреАрдкреАрдЯреА_рдХреЛрд░ {
    /// рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди
    pub рдХреЙрдиреНрдлрд╝рд┐рдЧ: рдЬреАрдкреАрдЯреА_рдХреЙрдиреНрдлрд╝рд┐рдЧ,
    /// рднрд╛рд╡рдирд╛рддреНрдордХ рд╕реНрдерд┐рддрд┐
    pub рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐: рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐,
    /// рд╕рдВрджрд░реНрдн рдЗрддрд┐рд╣рд╛рд╕
    pub рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕: Vec<String>,
    /// рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░
    pub рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░: HashMap<String, String>,
    /// рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╕рдВрджрд░реНрдн
    рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн: HashMap<String, Vec<String>>,
}

impl рд╣рд┐рдВрджреА_рдЬреАрдкреАрдЯреА_рдХреЛрд░ {
    /// рдирдпрд╛ рдЗрдВрд╕реНрдЯреЗрдВрд╕ рдмрдирд╛рдПрдВ
    pub fn рдирдпрд╛() -> Self {
        let mut рдХреЛрд░ = Self {
            рдХреЙрдиреНрдлрд╝рд┐рдЧ: рдЬреАрдкреАрдЯреА_рдХреЙрдиреНрдлрд╝рд┐рдЧ::default(),
            рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐: рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐::default(),
            рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕: Vec::new(),
            рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░: HashMap::new(),
            рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн: HashMap::new(),
        };

        рдХреЛрд░.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн_рдЖрд░рдВрдн();
        рдХреЛрд░.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░_рдЖрд░рдВрдн();
        рдХреЛрд░
    }

    /// рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╕рдВрджрд░реНрдн рдЖрд░рдВрдн рдХрд░реЗрдВ
    fn рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн_рдЖрд░рдВрдн(&mut self) {
        // рдЕрднрд┐рд╡рд╛рджрди
        self.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн.insert(
            "рдЕрднрд┐рд╡рд╛рджрди".to_string(),
            vec![
                "рдирдорд╕реНрддреЗ ЁЯЩП".to_string(),
                "рдкреНрд░рдгрд╛рдо".to_string(),
                "рд░рд╛рдо рд░рд╛рдо".to_string(),
                "рдЬрдп рд╢реНрд░реА рдХреГрд╖реНрдг".to_string(),
                "рд╕рдд рд╢реНрд░реА рдЕрдХрд╛рд▓".to_string(),
                "рдЖрджрд╛рдм".to_string(),
            ],
        );

        // рдЖрд╢реАрд░реНрд╡рд╛рдж
        self.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн.insert(
            "рдЖрд╢реАрд░реНрд╡рд╛рдж".to_string(),
            vec![
                "рд╢реБрднрдХрд╛рдордирд╛рдПрдВ".to_string(),
                "рдИрд╢реНрд╡рд░ рдЖрдкрдХрд╛ рднрд▓рд╛ рдХрд░реЗ".to_string(),
                "рд╕рджрд╛ рдЦреБрд╢ рд░рд╣реЛ".to_string(),
                "рдЬреАрддреЗ рд░рд╣реЛ".to_string(),
                "рдЖрдпреБрд╖реНрдорд╛рди рднрд╡".to_string(),
            ],
        );

        // рддреНрдпреЛрд╣рд╛рд░
        self.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн.insert(
            "рддреНрдпреЛрд╣рд╛рд░".to_string(),
            vec![
                "рджрд┐рд╡рд╛рд▓реА рдХреА рд╢реБрднрдХрд╛рдордирд╛рдПрдВ".to_string(),
                "рд╣реЛрд▓реА рдХреА рд╣рд╛рд░реНрджрд┐рдХ рд╢реБрднрдХрд╛рдордирд╛рдПрдВ".to_string(),
                "рдИрдж рдореБрдмрд╛рд░рдХ".to_string(),
                "рдХреНрд░рд┐рд╕рдорд╕ рдХреА рдмрдзрд╛рдИ".to_string(),
                "рдирд╡рд░рд╛рддреНрд░рд┐ рдХреА рд╢реБрднрдХрд╛рдордирд╛рдПрдВ".to_string(),
            ],
        );

        // рджрд░реНрд╢рди
        self.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн.insert(
            "рджрд░реНрд╢рди".to_string(),
            vec![
                "рд╡рд╕реБрдзреИрд╡ рдХреБрдЯреБрдореНрдмрдХрдореН".to_string(),
                "рдЕрддрд┐рдерд┐ рджреЗрд╡реЛ рднрд╡".to_string(),
                "рд╕рддреНрдпрдореЗрд╡ рдЬрдпрддреЗ".to_string(),
                "рдЕрд╣рд┐рдВрд╕рд╛ рдкрд░рдореЛ рдзрд░реНрдордГ".to_string(),
                "рдпреЛрдЧ: рдХрд░реНрдорд╕реБ рдХреМрд╢рд▓рдореН".to_string(),
            ],
        );
    }

    /// рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░ рдЖрд░рдВрдн рдХрд░реЗрдВ
    fn рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░_рдЖрд░рдВрдн(&mut self) {
        self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░
            .insert("рднрд╛рд░рдд".to_string(), "рднрд╛рд░рдд рд╡рд┐рд╡рд┐рдзрддрд╛рдУрдВ рд╕реЗ рднрд░рд╛ рджреЗрд╢ рд╣реИ рдЬрд╣рд╛рдБ рдЕрдиреЗрдХ рднрд╛рд╖рд╛рдПрдВ, рд╕рдВрд╕реНрдХреГрддрд┐рдпрд╛рдВ рдФрд░ рдкрд░рдВрдкрд░рд╛рдПрдВ рд╣реИрдВред".to_string());

        self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░.insert("рд╣рд┐рдВрджреА".to_string(), "рд╣рд┐рдВрджреА рднрд╛рд░рдд рдХреА рд░рд╛рдЬрднрд╛рд╖рд╛ рд╣реИ рдФрд░ рджреЗрд╡рдирд╛рдЧрд░реА рд▓рд┐рдкрд┐ рдореЗрдВ рд▓рд┐рдЦреА рдЬрд╛рддреА рд╣реИред".to_string());

        self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░.insert(
            "рдпреЛрдЧ".to_string(),
            "рдпреЛрдЧ рдПрдХ рдкреНрд░рд╛рдЪреАрди рднрд╛рд░рддреАрдп рдкрджреНрдзрддрд┐ рд╣реИ рдЬреЛ рд╢рд░реАрд░, рдорди рдФрд░ рдЖрддреНрдорд╛ рдХреЗ рд╕рдВрддреБрд▓рди рдкрд░ рдХреЗрдВрджреНрд░рд┐рдд рд╣реИред".to_string(),
        );

        self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░.insert(
            "рдЖрдпреБрд░реНрд╡реЗрдж".to_string(),
            "рдЖрдпреБрд░реНрд╡реЗрдж рднрд╛рд░рдд рдХреА рдкреНрд░рд╛рдЪреАрди рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдкрджреНрдзрддрд┐ рд╣реИ рдЬреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рдЙрдкрдЪрд╛рд░ рдкрд░ рдЖрдзрд╛рд░рд┐рдд рд╣реИред".to_string(),
        );
    }

    /// рд╕рдВрджреЗрд╢ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг
    pub async fn рд╕рдВрджреЗрд╢_рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг(&mut self, рд╕рдВрджреЗрд╢: &str) -> Result<String> {
        // рд╕рдВрджрд░реНрдн рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
        self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.push(рд╕рдВрджреЗрд╢.to_string());

        // рднрд╛рд╡рдирд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг
        let рднрд╛рд╡рдирд╛ = self.рднрд╛рд╡рдирд╛_рд╡рд┐рд╢реНрд▓реЗрд╖рдг(рд╕рдВрджреЗрд╢);
        self.рднрд╛рд╡рдирд╛_рдЕрджреНрдпрддрди(&рднрд╛рд╡рдирд╛);

        // рдЙрддреНрддрд░ рддреИрдпрд╛рд░ рдХрд░реЗрдВ
        let рдЙрддреНрддрд░ = self.рдЙрддреНрддрд░_рддреИрдпрд╛рд░_рдХрд░реЗрдВ(рд╕рдВрджреЗрд╢, &рднрд╛рд╡рдирд╛).await?;

        // рдЗрддрд┐рд╣рд╛рд╕ рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
        self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.push(рдЙрддреНрддрд░.clone());

        // рдЗрддрд┐рд╣рд╛рд╕ рд╕реАрдорд╛
        if self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() > 20 {
            self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.drain(0..2);
        }

        Ok(рдЙрддреНрддрд░)
    }

    /// рднрд╛рд╡рдирд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг
    fn рднрд╛рд╡рдирд╛_рд╡рд┐рд╢реНрд▓реЗрд╖рдг(
        &self, рд╕рдВрджреЗрд╢: &str
    ) -> рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐ {
        let mut рднрд╛рд╡рдирд╛ = рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐::default();

        // рд╕рдХрд╛рд░рд╛рддреНрдордХ рд╢рдмреНрдж
        let рд╕рдХрд╛рд░рд╛рддреНрдордХ = ["рдЦреБрд╢", "рдЕрдЪреНрдЫрд╛", "рд╕реБрдВрджрд░", "рдкреНрд░рд╕рдиреНрди", "рдЖрдирдВрдж", "рдореБрдмрд╛рд░рдХ", "рд╢реБрдн"];
        let рд╕рдХрд╛рд░рд╛рддреНрдордХ_рдЧрдгрдирд╛ = рд╕рдХрд╛рд░рд╛рддреНрдордХ.iter().filter(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.contains(рд╢рдмреНрдж)).count() as f32;

        // рдирдХрд╛рд░рд╛рддреНрдордХ рд╢рдмреНрдж
        let рдирдХрд╛рд░рд╛рддреНрдордХ = ["рджреБрдЦ", "рдмреБрд░рд╛", "рдЧрд▓рдд", "рдкрд░реЗрд╢рд╛рди", "рдЪрд┐рдВрддрд╛", "рдбрд░"];
        let рдирдХрд╛рд░рд╛рддреНрдордХ_рдЧрдгрдирд╛ = рдирдХрд╛рд░рд╛рддреНрдордХ.iter().filter(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.contains(рд╢рдмреНрдж)).count() as f32;

        // рдкреНрд░рд╢реНрди рд╕рдВрдХреЗрддрдХ
        let рдкреНрд░рд╢реНрди = ["рдХреНрдпрд╛", "рдХреИрд╕реЗ", "рдХреНрдпреЛрдВ", "рдХрдм", "рдХрд╣рд╛рдБ", "рдХрд┐рд╕рдиреЗ"];
        let рдкреНрд░рд╢реНрди_рдЧрдгрдирд╛ = рдкреНрд░рд╢реНрди.iter().filter(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.contains(рд╢рдмреНрдж)).count() as f32;

        // рднрд╛рд╡рдирд╛ рд╕рдорд╛рдпреЛрдЬрди
        рднрд╛рд╡рдирд╛.рдЦреБрд╢реА = (0.5 + рд╕рдХрд╛рд░рд╛рддреНрдордХ_рдЧрдгрдирд╛ * 0.1 - рдирдХрд╛рд░рд╛рддреНрдордХ_рдЧрдгрдирд╛ * 0.1).clamp(0.0, 1.0);
        рднрд╛рд╡рдирд╛.рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ = (0.3 + рдкреНрд░рд╢реНрди_рдЧрдгрдирд╛ * 0.2).clamp(0.0, 1.0);
        рднрд╛рд╡рдирд╛.рдХрд░реБрдгрд╛ = if рдирдХрд╛рд░рд╛рддреНрдордХ_рдЧрдгрдирд╛ > 0.0 { 0.8 } else { 0.5 };

        // рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╕рдВрджрд░реНрдн
        let рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ = ["рдИрд╢реНрд╡рд░", "рднрдЧрд╡рд╛рди", "рдЖрддреНрдорд╛", "рдзрд░реНрдо", "рдХрд░реНрдо", "рдореЛрдХреНрд╖"];
        if рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ.iter().any(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.contains(рд╢рдмреНрдж)) {
            рднрд╛рд╡рдирд╛.рднрдХреНрддрд┐ = 0.9;
            рднрд╛рд╡рдирд╛.рд╢рд╛рдВрддрд┐ = 0.8;
        }

        рднрд╛рд╡рдирд╛
    }

    /// рдЙрддреНрддрд░ рддреИрдпрд╛рд░ рдХрд░реЗрдВ
    async fn рдЙрддреНрддрд░_рддреИрдпрд╛рд░_рдХрд░реЗрдВ(
        &self, рд╕рдВрджреЗрд╢: &str, рднрд╛рд╡рдирд╛: &рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐
    ) -> Result<String> {
        // рдЕрднрд┐рд╡рд╛рджрди рдЬрд╛рдВрдЪ
        if self.рдЕрднрд┐рд╡рд╛рджрди_рд╣реИ(рд╕рдВрджреЗрд╢) {
            return Ok(self.рдЕрднрд┐рд╡рд╛рджрди_рдЙрддреНрддрд░());
        }

        // рдкреНрд░рд╢реНрди рдЬрд╛рдВрдЪ
        if рд╕рдВрджреЗрд╢.contains("?") || self.рдкреНрд░рд╢реНрди_рд╣реИ(рд╕рдВрджреЗрд╢) {
            return self.рдкреНрд░рд╢реНрди_рдЙрддреНрддрд░(рд╕рдВрджреЗрд╢).await;
        }

        // рднрд╛рд╡рдирд╛рддреНрдордХ рдкреНрд░рддрд┐рдХреНрд░рд┐рдпрд╛
        if рднрд╛рд╡рдирд╛.рдХрд░реБрдгрд╛ > 0.7 {
            return Ok(self.рд╕рд╛рдВрддреНрд╡рдирд╛_рдЙрддреНрддрд░());
        }

        // рд╕рд╛рдорд╛рдиреНрдп рд╡рд╛рд░реНрддрд╛рд▓рд╛рдк
        Ok(self.рд╕рд╛рдорд╛рдиреНрдп_рдЙрддреНрддрд░(рд╕рдВрджреЗрд╢, рднрд╛рд╡рдирд╛))
    }

    /// рдЕрднрд┐рд╡рд╛рджрди рдЬрд╛рдВрдЪ
    fn рдЕрднрд┐рд╡рд╛рджрди_рд╣реИ(&self, рд╕рдВрджреЗрд╢: &str) -> bool {
        let рдЕрднрд┐рд╡рд╛рджрди_рд╢рдмреНрдж = ["рдирдорд╕реНрддреЗ", "рдирдорд╕реНрдХрд╛рд░", "рдкреНрд░рдгрд╛рдо", "рд╣реЗрд▓реЛ", "рд╣рд╛рдп", "рд░рд╛рдо рд░рд╛рдо"];
        рдЕрднрд┐рд╡рд╛рджрди_рд╢рдмреНрдж.iter().any(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.to_lowercase().contains(рд╢рдмреНрдж))
    }

    /// рдЕрднрд┐рд╡рд╛рджрди рдЙрддреНрддрд░
    fn рдЕрднрд┐рд╡рд╛рджрди_рдЙрддреНрддрд░(&self) -> String {
        let рдЕрднрд┐рд╡рд╛рджрди = &self.рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ_рд╕рдВрджрд░реНрдн["рдЕрднрд┐рд╡рд╛рджрди"];
        let рдЪрдпрди = рдЕрднрд┐рд╡рд╛рджрди[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рдЕрднрд┐рд╡рд╛рджрди.len()].clone();

        match self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЦреБрд╢реА {
            x if x > 0.8 => format!("{} рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ! рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?", рдЪрдпрди),
            x if x > 0.5 => format!("{} рдХреИрд╕реЗ рд╣реИрдВ рдЖрдк? рдореИрдВ рдпрд╣рд╛рдБ рдЖрдкрдХреА рдорджрдж рдХреЗ рд▓рд┐рдП рд╣реВрдВред", рдЪрдпрди),
            _ => format!("{} рдореИрдВ TinkyBink рд╣реВрдВ, рдЖрдкрдХреА рд╕реЗрд╡рд╛ рдореЗрдВред", рдЪрдпрди),
        }
    }

    /// рдкреНрд░рд╢реНрди рдЬрд╛рдВрдЪ
    fn рдкреНрд░рд╢реНрди_рд╣реИ(&self, рд╕рдВрджреЗрд╢: &str) -> bool {
        let рдкреНрд░рд╢реНрди_рд╢рдмреНрдж = ["рдХреНрдпрд╛", "рдХреИрд╕реЗ", "рдХреНрдпреЛрдВ", "рдХрдм", "рдХрд╣рд╛рдБ", "рдХреМрди", "рдХрд┐рд╕рдХрд╛"];
        рдкреНрд░рд╢реНрди_рд╢рдмреНрдж.iter().any(|&рд╢рдмреНрдж| рд╕рдВрджреЗрд╢.contains(рд╢рдмреНрдж))
    }

    /// рдкреНрд░рд╢реНрди рдЙрддреНрддрд░
    async fn рдкреНрд░рд╢реНрди_рдЙрддреНрддрд░(&self, рд╕рдВрджреЗрд╢: &str) -> Result<String> {
        // рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░ рдореЗрдВ рдЦреЛрдЬреЗрдВ
        for (рд╡рд┐рд╖рдп, рдЬрд╛рдирдХрд╛рд░реА) in &self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░ {
            if рд╕рдВрджреЗрд╢.contains(рд╡рд┐рд╖рдп) {
                return Ok(format!("{} рдХреНрдпрд╛ рдЖрдк рдФрд░ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?", рдЬрд╛рдирдХрд╛рд░реА));
            }
        }

        // TinkyBink рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ
        if рд╕рдВрджреЗрд╢.contains("TinkyBink") || рд╕рдВрджреЗрд╢.contains("рддрд┐рдВрдХреАрдмрд┐рдВрдХ") {
            return Ok("рдореИрдВ TinkyBink рд╣реВрдВ, рдПрдХ рдЙрдиреНрдирдд AI рд╕рд╣рд╛рдпрдХ рдЬреЛ рд╣рд┐рдВрджреА рдФрд░ рдЕрдиреНрдп рднрд╛рд╖рд╛рдУрдВ рдореЗрдВ рдмрд╛рддрдЪреАрдд рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред рдореИрдВ рдпрд╣рд╛рдБ рдЖрдкрдХреА рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реВрдВ! ЁЯМЯ".to_string());
        }

        // рд╕рдордп рд╕рдВрдмрдВрдзреА рдкреНрд░рд╢реНрди
        if рд╕рдВрджреЗрд╢.contains("рд╕рдордп") || рд╕рдВрджреЗрд╢.contains("рдЯрд╛рдЗрдо") {
            return Ok("рд╕рдордп рдПрдХ рдирджреА рдХреА рддрд░рд╣ рд╣реИ рдЬреЛ рдирд┐рд░рдВрддрд░ рдмрд╣рддреА рд░рд╣рддреА рд╣реИред рд╡рд░реНрддрдорд╛рди рдореЗрдВ рдЬреАрдирд╛ рд╣реА рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рд╣реИред".to_string());
        }

        // рд╕рд╛рдорд╛рдиреНрдп рдЙрддреНрддрд░
        Ok(match self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ {
            x if x > 0.7 => "рдпрд╣ рдПрдХ рд░реЛрдЪрдХ рдкреНрд░рд╢реНрди рд╣реИ! рдореИрдВ рдЗрд╕ рдкрд░ рд╡рд┐рдЪрд╛рд░ рдХрд░ рд░рд╣рд╛ рд╣реВрдВред рдХреНрдпрд╛ рдЖрдк рдЗрд╕рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдФрд░ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ?".to_string(),
            x if x > 0.4 => "рдореИрдВ рд╕рдордЭ рд░рд╣рд╛ рд╣реВрдВ рдЖрдкрдХрд╛ рдкреНрд░рд╢реНрдиред рдХреГрдкрдпрд╛ рдереЛрдбрд╝рд╛ рдФрд░ рд╡рд┐рд╕реНрддрд╛рд░ рд╕реЗ рдмрддрд╛рдПрдВред".to_string(),
            _ => "рдпрд╣ рд╡рд┐рд╖рдп рдЧрд╣рди рд╣реИред рдЖрдЗрдП рдЗрд╕ рдкрд░ рдЪрд░реНрдЪрд╛ рдХрд░реЗрдВред".to_string(),
        })
    }

    /// рд╕рд╛рдВрддреНрд╡рдирд╛ рдЙрддреНрддрд░
    fn рд╕рд╛рдВрддреНрд╡рдирд╛_рдЙрддреНрддрд░(&self) -> String {
        let рд╕рд╛рдВрддреНрд╡рдирд╛ = vec![
            "рдЪрд┐рдВрддрд╛ рди рдХрд░реЗрдВ, рд╕рдм рдХреБрдЫ рдареАрдХ рд╣реЛ рдЬрд╛рдПрдЧрд╛ред 'рдпрд╣ рднреА рдЧреБрдЬрд╝рд░ рдЬрд╛рдПрдЧрд╛ред'",
            "рдореИрдВ рд╕рдордЭ рд╕рдХрддрд╛ рд╣реВрдВред рдХрднреА-рдХрднреА рдЬреАрд╡рди рдореЗрдВ рдЙрддрд╛рд░-рдЪрдврд╝рд╛рд╡ рдЖрддреЗ рд╣реИрдВред",
            "рдЖрдкрдХреА рднрд╛рд╡рдирд╛рдПрдВ рдорд╛рдиреНрдп рд╣реИрдВред рдореИрдВ рдпрд╣рд╛рдБ рдЖрдкрдХреЗ рд╕рд╛рде рд╣реВрдВред",
            "рдЬреИрд╕реЗ рд░рд╛рдд рдХреЗ рдмрд╛рдж рд╕реБрдмрд╣ рд╣реЛрддреА рд╣реИ, рд╡реИрд╕реЗ рд╣реА рджреБрдЦ рдХреЗ рдмрд╛рдж рд╕реБрдЦ рдЖрддрд╛ рд╣реИред",
        ];

        рд╕рд╛рдВрддреНрд╡рдирд╛[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рд╕рд╛рдВрддреНрд╡рдирд╛.len()].to_string()
    }

    /// рд╕рд╛рдорд╛рдиреНрдп рдЙрддреНрддрд░
    fn рд╕рд╛рдорд╛рдиреНрдп_рдЙрддреНрддрд░(
        &self, рд╕рдВрджреЗрд╢: &str, рднрд╛рд╡рдирд╛: &рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐
    ) -> String {
        let рд╢реИрд▓реА_рдЙрддреНрддрд░ = match &self.рдХреЙрдиреНрдлрд╝рд┐рдЧ.рднрд╛рд╖рд╛_рд╢реИрд▓реА {
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдФрдкрдЪрд╛рд░рд┐рдХ => {
                format!("рдЖрдкрдХреА рдмрд╛рдд рд╕реЗ рдореИрдВ рд╕рд╣рдордд рд╣реВрдВред {}", self.рдФрдкрдЪрд╛рд░рд┐рдХ_рдЯрд┐рдкреНрдкрдгреА())
            }
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдорд┐рддреНрд░рд╡рдд => {
                format!(
                    "рд╡рд╛рд╣! {} {}",
                    if рднрд╛рд╡рдирд╛.рдЦреБрд╢реА > 0.6 {
                        "рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛!"
                    } else {
                        "рд╕рдордЭ рдЧрдпрд╛ред"
                    },
                    self.рдорд┐рддреНрд░рд╡рдд_рдЯрд┐рдкреНрдкрдгреА()
                )
            }
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдХрд╛рд╡реНрдпрд╛рддреНрдордХ => self.рдХрд╛рд╡реНрдпрд╛рддреНрдордХ_рдЙрддреНрддрд░(),
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рддрдХрдиреАрдХреА => {
                format!("рддрдХрдиреАрдХреА рджреГрд╖реНрдЯрд┐ рд╕реЗ, {} рдкреНрд░рд╛рд╕рдВрдЧрд┐рдХ рд╣реИред", рд╕рдВрджреЗрд╢.split_whitespace().next().unwrap_or("рдпрд╣"))
            }
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ => self.рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ_рдЙрддреНрддрд░(),
        };

        рд╢реИрд▓реА_рдЙрддреНрддрд░
    }

    /// рдФрдкрдЪрд╛рд░рд┐рдХ рдЯрд┐рдкреНрдкрдгреА
    fn рдФрдкрдЪрд╛рд░рд┐рдХ_рдЯрд┐рдкреНрдкрдгреА(&self) -> String {
        let рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ =
            vec!["рдпрд╣ рд╡рд┐рдЪрд╛рд░рдгреАрдп рд╡рд┐рд╖рдп рд╣реИред", "рдЖрдкрдХрд╛ рджреГрд╖реНрдЯрд┐рдХреЛрдг рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИред", "рдЗрд╕ рдкрд░ рдФрд░ рдЪрд░реНрдЪрд╛ рдЖрд╡рд╢реНрдпрдХ рд╣реИред", "рдореИрдВ рдЖрдкрдХреА рдмрд╛рдд рд╕реЗ рд╕рд╣рдордд рд╣реВрдВред"];

        рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ.len()].to_string()
    }

    /// рдорд┐рддреНрд░рд╡рдд рдЯрд┐рдкреНрдкрдгреА
    fn рдорд┐рддреНрд░рд╡рдд_рдЯрд┐рдкреНрдкрдгреА(&self) -> String {
        let рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ =
            vec!["рдХреНрдпрд╛ рдмрд╛рдд рд╣реИ! ЁЯШК", "рдордЬрд╝реЗрджрд╛рд░ рд╣реИ рдпрд╣!", "рдЕрд░реЗ рд╡рд╛рд╣, рдХрдорд╛рд▓ рд╣реИ!", "рдмрд┐рд▓реНрдХреБрд▓ рд╕рд╣реА рдХрд╣рд╛ рдЖрдкрдиреЗ!", "рдпрд╣ рддреЛ рдмрд╣реБрдд рдЕрдЪреНрдЫреА рдмрд╛рдд рд╣реИ!"];

        рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рдЯрд┐рдкреНрдкрдгрд┐рдпрд╛рдВ.len()].to_string()
    }

    /// рдХрд╛рд╡реНрдпрд╛рддреНрдордХ рдЙрддреНрддрд░
    fn рдХрд╛рд╡реНрдпрд╛рддреНрдордХ_рдЙрддреНрддрд░(&self) -> String {
        let рдХрд╛рд╡реНрдп = vec![
            "рдЬреИрд╕реЗ рдЪрд╛рдВрдж рд╕рд┐рддрд╛рд░реЛрдВ рдореЗрдВ рдЪрдордХрддрд╛ рд╣реИ, рд╡реИрд╕реЗ рд╣реА рдЖрдкрдХреЗ рд╡рд┐рдЪрд╛рд░ рдорди рдХреЛ рдкреНрд░рдХрд╛рд╢рд┐рдд рдХрд░рддреЗ рд╣реИрдВред",
            "рд╢рдмреНрджреЛрдВ рдХреА рдорд╛рд▓рд╛ рдореЗрдВ рдкрд┐рд░реЛрдП рдЖрдкрдХреЗ рднрд╛рд╡, рдорди рдХреЗ рд╕рд╛рдЧрд░ рдореЗрдВ рдЙрдард╛рддреЗ рд╣реИрдВ рд▓рд╣рд░ред",
            "рдЬреАрд╡рди рдПрдХ рдХрд╡рд┐рддрд╛ рд╣реИ, рд╣рд░ рдкрд▓ рдПрдХ рдЫрдВрдж, рдЖрдкрдХреА рдмрд╛рддреЗрдВ рдЗрд╕рдореЗрдВ рдЬреЛрдбрд╝рддреА рд╣реИрдВ рдЖрдирдВрджред",
            "рдмрд╣рддреА рдирджреА рд╕реА рд╣реИ рдпрд╣ рдмрд╛рддрдЪреАрдд, рд╣рд░ рдореЛрдбрд╝ рдкрд░ рдирдпрд╛ рдЕрдиреБрднрд╡, рдирдИ рд╕реАрдЦред",
        ];

        рдХрд╛рд╡реНрдп[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рдХрд╛рд╡реНрдп.len()].to_string()
    }

    /// рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдЙрддреНрддрд░
    fn рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ_рдЙрддреНрддрд░(&self) -> String {
        let рдЖрдзреНрдпрд╛рддреНрдо = vec![
            "рдЬреЛ рд╣реЛрддрд╛ рд╣реИ рдЕрдЪреНрдЫреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдИрд╢реНрд╡рд░ рдХреА рдпреЛрдЬрдирд╛ рдореЗрдВ рд╕рдм рдХреБрдЫ рд╕рд╛рд░реНрдердХ рд╣реИред",
            "рдХрд░реНрдо рдХрд░реЛ, рдлрд▓ рдХреА рдЪрд┐рдВрддрд╛ рдордд рдХрд░реЛ - рдпрд╣реА рдЧреАрддрд╛ рдХрд╛ рд╕рд╛рд░ рд╣реИред",
            "рдЕрдВрддрд░реНрдорди рдХреА рдЖрд╡рд╛рдЬрд╝ рд╕реБрдиреЛ, рд╡рд╣реАрдВ рд╕рддреНрдп рдХрд╛ рд╡рд╛рд╕ рд╣реИред",
            "рд╕рдВрд╕рд╛рд░ рдорд╛рдпрд╛ рд╣реИ, рдЖрддреНрдорд╛ рд╢рд╛рд╢реНрд╡рддред рдЗрд╕ рд╕рддреНрдп рдХреЛ рдЬрд╛рдирдирд╛ рд╣реА рдЬреНрдЮрд╛рди рд╣реИред",
        ];

        рдЖрдзреНрдпрд╛рддреНрдо[self.рд╕рдВрджрд░реНрдн_рдЗрддрд┐рд╣рд╛рд╕.len() % рдЖрдзреНрдпрд╛рддреНрдо.len()].to_string()
    }

    /// рднрд╛рд╡рдирд╛ рдЕрджреНрдпрддрди
    fn рднрд╛рд╡рдирд╛_рдЕрджреНрдпрддрди(
        &mut self, рдирдИ_рднрд╛рд╡рдирд╛: &рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐
    ) {
        // Smooth emotional transition
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЦреБрд╢реА = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЦреБрд╢реА * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рдЦреБрд╢реА * 0.3;
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЙрддреНрд╕рд╛рд╣ = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЙрддреНрд╕рд╛рд╣ * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рдЙрддреНрд╕рд╛рд╣ * 0.3;
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рд╢рд╛рдВрддрд┐ = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рд╢рд╛рдВрддрд┐ * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рд╢рд╛рдВрддрд┐ * 0.3;
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдХрд░реБрдгрд╛ = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдХрд░реБрдгрд╛ * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рдХрд░реБрдгрд╛ * 0.3;
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рдЬрд┐рдЬреНрдЮрд╛рд╕рд╛ * 0.3;
        self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рднрдХреНрддрд┐ = self.рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐.рднрдХреНрддрд┐ * 0.7 + рдирдИ_рднрд╛рд╡рдирд╛.рднрдХреНрддрд┐ * 0.3;
    }

    /// рдбреАрдк рд▓рд░реНрдирд┐рдВрдЧ рд╕рд┐рдореБрд▓реЗрд╢рди
    pub async fn рдЧрд╣рди_рд╢рд┐рдХреНрд╖рдг_рд╕рд┐рдореБрд▓реЗрд╢рди(
        &mut self,
        рдкреНрд░рд╢рд┐рдХреНрд╖рдг_рдбреЗрдЯрд╛: Vec<String>,
    ) -> Result<()> {
        println!("ЁЯзШ рдЧрд╣рди рд╢рд┐рдХреНрд╖рдг рдкреНрд░рд╛рд░рдВрдн...");

        for (i, рдбреЗрдЯрд╛) in рдкреНрд░рд╢рд┐рдХреНрд╖рдг_рдбреЗрдЯрд╛.iter().enumerate() {
            // рд╕рд┐рдореБрд▓реЗрдЯ learning
            tokio::time::sleep(tokio::time::Duration::from_millis(100)).await;

            // рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░ рдореЗрдВ рдЬреЛрдбрд╝реЗрдВ
            let рдХреБрдВрдЬреА = format!("рд╕реАрдЦрд╛_{}", i);
            self.рдЬреНрдЮрд╛рди_рдЖрдзрд╛рд░.insert(рдХреБрдВрдЬреА, рдбреЗрдЯрд╛.clone());

            println!("ЁЯУЪ рд╕реАрдЦ рд░рд╣рд╛ рд╣реВрдВ: {}", рдбреЗрдЯрд╛);
        }

        println!("тЬи рдЧрд╣рди рд╢рд┐рдХреНрд╖рдг рдкреВрд░реНрдг!");
        Ok(())
    }

    /// рд░рдЪрдирд╛рддреНрдордХ рд▓реЗрдЦрди
    pub fn рд░рдЪрдирд╛рддреНрдордХ_рд▓реЗрдЦрди(&self, рд╡рд┐рд╖рдп: &str) -> String {
        let рдкреНрд░рд╛рд░рдВрдн = match self.рдХреЙрдиреНрдлрд╝рд┐рдЧ.рднрд╛рд╖рд╛_рд╢реИрд▓реА {
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдХрд╛рд╡реНрдпрд╛рддреНрдордХ => {
                format!("ЁЯМ╕ {} рдкрд░ рдПрдХ рдХрд╡рд┐рддрд╛:\n\n", рд╡рд┐рд╖рдп)
            }
            рднрд╛рд╖рд╛_рд╢реИрд▓реА_рдкреНрд░рдХрд╛рд░::рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ => {
                format!("ЁЯХЙя╕П {} рдкрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рд╡рд┐рдЪрд╛рд░:\n\n", рд╡рд┐рд╖рдп)
            }
            _ => {
                format!("тЬНя╕П {} рдкрд░ рдореЗрд░реЗ рд╡рд┐рдЪрд╛рд░:\n\n", рд╡рд┐рд╖рдп)
            }
        };

        let рд╕рд╛рдордЧреНрд░реА = match рд╡рд┐рд╖рдп {
            s if s.contains("рдкреНрд░реЗрдо") || s.contains("рдкреНрдпрд╛рд░") => {
                "рдкреНрд░реЗрдо рд╡рд╣ рдЕрдореГрдд рд╣реИ рдЬреЛ рдЬреАрд╡рди рдХреЛ рдордзреБрд░ рдмрдирд╛рддрд╛ рд╣реИ,\n\
                 рд╣рд░ рджрд┐рд▓ рдореЗрдВ рдмрд╕рд╛, рд╣рд░ рдЖрдВрдЦ рдореЗрдВ рдЫреБрдкрд╛,\n\
                 рдкреНрд░реЗрдо рд╣реА рддреЛ рд╣реИ рдЬреЛ рдЗрдВрд╕рд╛рди рдХреЛ рдЗрдВрд╕рд╛рди рд╕реЗ рдЬреЛрдбрд╝рддрд╛ рд╣реИред"
            }
            s if s.contains("рдкреНрд░рдХреГрддрд┐") => {
                "рдкреНрд░рдХреГрддрд┐ рдорд╛рдБ рд╣реИ, рдЧреБрд░реБ рд╣реИ, рдорд┐рддреНрд░ рд╣реИ,\n\
                 рдкреЗрдбрд╝реЛрдВ рдХреА рдЫрд╛рдпрд╛ рдореЗрдВ рд╢рд╛рдВрддрд┐, рдирджрд┐рдпреЛрдВ рдХреЗ рдХрд▓рдХрд▓ рдореЗрдВ рд╕рдВрдЧреАрдд,\n\
                 рдкрд░реНрд╡рддреЛрдВ рдХреА рдКрдВрдЪрд╛рдИ рдореЗрдВ рдкреНрд░реЗрд░рдгрд╛, рд╣рд╡рд╛ рдореЗрдВ рд╕реНрд╡рддрдВрддреНрд░рддрд╛ рдХрд╛ рд╕рдВрджреЗрд╢ред"
            }
            s if s.contains("рдЬреАрд╡рди") => {
                "рдЬреАрд╡рди рдПрдХ рдпрд╛рддреНрд░рд╛ рд╣реИ, рдордВрдЬрд╝рд┐рд▓ рдирд╣реАрдВ,\n\
                 рд╣рд░ рдкрд▓ рдПрдХ рдирдпрд╛ рдЕрдиреБрднрд╡, рд╣рд░ рджрд┐рди рдПрдХ рдирдпрд╛ рд╕рдмрдХ,\n\
                 рдЦреБрд╢рд┐рдпреЛрдВ рдФрд░ рдЧрдореЛрдВ рдХрд╛ рд╕рдВрдЧрдо рд╣реА рддреЛ рдЬреАрд╡рди рдХрд╛ рд╕рд╛рд░ рд╣реИред"
            }
            _ => {
                "рд╣рд░ рд╡рд┐рд╖рдп рдореЗрдВ рдЫреБрдкрд╛ рд╣реИ рдПрдХ рдЧрд╣рд░рд╛ рдЕрд░реНрде,\n\
                 рд╣рд░ рд╢рдмреНрдж рдореЗрдВ рдмрд╕реА рд╣реИ рдПрдХ рдХрд╣рд╛рдиреА,\n\
                 рдмрд╕ рджреЗрдЦрдиреЗ рд╡рд╛рд▓реА рдЖрдВрдЦ рдФрд░ рд╕рдордЭрдиреЗ рд╡рд╛рд▓рд╛ рдорди рдЪрд╛рд╣рд┐рдПред"
            }
        };

        format!("{}{}", рдкреНрд░рд╛рд░рдВрдн, рд╕рд╛рдордЧреНрд░реА)
    }
}

// рдкрдмреНрд▓рд┐рдХ рдПрдХреНрд╕рдкреЛрд░реНрдЯ
#[allow(unused_imports)]
pub use self::{
    рдЬреАрдкреАрдЯреА_рдХреЙрдиреНрдлрд╝рд┐рдЧ as HindiGPTConfig, рднрд╛рд╡рдирд╛рддреНрдордХ_рд╕реНрдерд┐рддрд┐ as HindiEmotionalState, рд╣рд┐рдВрджреА_рдЬреАрдкреАрдЯреА_рдХреЛрд░ as HindiGPTCore,
};
